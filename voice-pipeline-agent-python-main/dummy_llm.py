# Generated by ChatGPT
class DummyLLM:
    def __init__(self):
        self._callbacks = {}

    def on(self, event: str, callback: callable = None):
        def decorator(cb):
            self._callbacks[event] = cb
            return cb

        if callback:
            self._callbacks[event] = callback
            return callback
        else:
            return decorator
    
    async def chat(self, **kwargs):
        ctx = kwargs.get("chat_ctx")
        last_message = ctx.messages[-1].content if ctx and ctx.messages else "No message"
        return f"Echo: {last_message}"

    async def complete(self, prompt: str):
        # Example: Simulate triggering the 'metrics_collected' event (if callback exists)
        if "metrics_collected" in self._callbacks and self._callbacks["metrics_collected"]:
            print("Triggering 'metrics_collected' event callback.")  # Debugging print
            self._callbacks["metrics_collected"](None)  # Trigger an empty callback call (for demo purposes)
        return "I'm just a dummy LLM responding to your prompt."